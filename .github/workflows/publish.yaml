name: Publish Version
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Publish Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup Environment
        run: node -e "console.log('PACKAGE_VERSION=' + require('./package.json').version + '\nPACKAGE_NAME=' + require('./package.json').name + '-' + require('./package.json').version)" >> $GITHUB_ENV
      - name: Verify Version
        run: node -e "if ('refs/tags/v' + '${{ env.PACKAGE_VERSION }}' !== '${{ github.ref }}') { console.log('::error' + 'Version Mismatch. refs/tags/v' + '${{ env.PACKAGE_VERSION }}', '${{ github.ref }}'); throw Error('Version Mismatch')} "
      - name: Install Dependencies
        run: yarn
      # - name: Test Extension
      #   run: yarn test
      - name: Publish Extension
        run: yarn vsce publish --yarn --pat ${{ secrets.AZURE_MARKETPLACE_TOKEN }}
      # - name: Generate Changelog
      #   id: changelog
      #   uses: mindsers/changelog-reader-action@v2
      #   with:
      #     version: ${{ env.PACKAGE_VERSION }}
      #     path: ./CHANGELOG.md
      # - name: Create GitHub release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: v${{ env.PACKAGE_VERSION }}
      #     body: ${{ steps.changelog.outputs.changes }}
      #     draft: false
      #     prerelease: false
      # - name: Upload GitHub release
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./${{ env.PACKAGE_NAME }}.vsix
      #     asset_name: ${{ env.PACKAGE_NAME }}.vsix
      #     asset_content_type: application/zip
